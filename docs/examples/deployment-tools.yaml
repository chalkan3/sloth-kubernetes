# Example: Deploying to Tools Workers (worker-1, worker-2)
#
# This example shows how to deploy an application that will ONLY run on
# the workers labeled with workload=tools
#
# Use cases:
# - CI/CD tools (Jenkins, GitLab Runner, etc.)
# - Monitoring tools (Prometheus, Grafana)
# - Development tools
# - ArgoCD applications

apiVersion: v1
kind: Namespace
metadata:
  name: tools
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-tool
  namespace: tools
  labels:
    app: example-tool
spec:
  replicas: 2  # Will distribute across worker-1 and worker-2
  selector:
    matchLabels:
      app: example-tool
  template:
    metadata:
      labels:
        app: example-tool
    spec:
      # Target nodes with workload=tools label
      nodeSelector:
        workload: tools

      # Tolerate the tools taint to allow scheduling
      tolerations:
      - key: workload
        operator: Equal
        value: tools
        effect: NoSchedule

      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: example-tool
  namespace: tools
spec:
  type: ClusterIP
  selector:
    app: example-tool
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-tool-ingress
  namespace: tools
  annotations:
    kubernetes.io/ingress.class: nginx
    # For HTTPS redirect
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: example.kube.chalkan3.com.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: example-tool
            port:
              number: 80

# To deploy:
# kubectl apply -f deployment-tools.yaml
#
# Add DNS record:
# doctl compute domain records create chalkan3.com.br \
#   --record-type A \
#   --record-name example.kube \
#   --record-data 10.8.0.13 \
#   --record-ttl 300
#
# Access: http://example.kube.chalkan3.com.br
