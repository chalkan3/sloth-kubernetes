# Kubernetes Cluster Configuration
# This file defines the complete cluster configuration for multi-cloud deployment

metadata:
  name: kubernetes-cluster
  environment: production
  version: 1.0.0
  owner: DevOps Team
  team: Platform Engineering
  tags:
    - kubernetes
    - multi-cloud
    - production

cluster:
  type: rke
  version: v1.28.7-rancher1-1
  highAvailability: true
  autoScaling:
    enabled: false

providers:
  digitalocean:
    enabled: true
    region: nyc3
    token: ${DO_API_TOKEN}  # Set via environment variable
    sshKeys:
      - "your-ssh-key-fingerprint"
    vpc:
      name: kubernetes-vpc
      cidr: 10.0.0.0/16
      region: nyc3
      private: true
    monitoring: true
    ipv6: false
    userdata: ""
    tags:
      - kubernetes
      - production

  linode:
    enabled: true
    region: us-east
    token: ${LINODE_API_TOKEN}  # Set via environment variable
    rootPassword: ${LINODE_ROOT_PASS}  # Set via environment variable
    authorizedKeys:
      - "ssh-rsa your-public-key"
    vpc:
      name: kubernetes-vpc
      cidr: 10.1.0.0/16
      region: us-east
    tags:
      - kubernetes
      - production

network:
  mode: vpc
  cidr: 10.0.0.0/16
  podCidr: 10.42.0.0/16
  serviceCidr: 10.43.0.0/16
  dns:
    domain: chalkan3.com.br
    servers:
      - 1.1.1.1
      - 8.8.8.8
    provider: digitalocean
    externalDns: true
  dnsServers:
    - 1.1.1.1
    - 8.8.8.8
  enableNodePorts: false
  crossProviderNetworking: true

  wireguard:
    enabled: true
    serverEndpoint: ${WG_SERVER_ENDPOINT}  # Your WireGuard server IP
    serverPublicKey: ${WG_SERVER_PUBLIC_KEY}  # Your WireGuard server public key
    port: 51820
    persistentKeepalive: 25
    mtu: 1420
    dns:
      - 1.1.1.1
      - 8.8.8.8
    allowedIPs:
      - 10.0.0.0/8
      - 172.16.0.0/12
    meshNetworking: false
    sshPrivateKeyPath: ~/.ssh/id_rsa

  firewall:
    inboundRules:
      # WireGuard VPN
      - protocol: udp
        port: "51820"
        source:
          - 0.0.0.0/0
        description: WireGuard VPN

      # Internal only - no public access
      - protocol: tcp
        port: "22"
        source:
          - 10.8.0.0/24  # Only from WireGuard network
        description: SSH (VPN only)

security:
  ssh:
    port: 22
    allowPasswordAuth: false
    allowedUsers:
      - root

  tls:
    enabled: true
    provider: letsencrypt
    email: admin@example.com

  rbac:
    enabled: true
    defaultPolicy: allow

# Node Pools Configuration
nodePools:
  # DigitalOcean Masters (1 master)
  do-masters:
    name: do-master
    provider: digitalocean
    count: 1
    roles:
      - controlplane
      - etcd
    size: s-4vcpu-8gb
    image: ubuntu-22-04-x64
    region: nyc3
    zones: []
    labels:
      role: master
      provider: digitalocean
    taints: []
    userData: ""

  # DigitalOcean Workers (2 workers)
  do-workers:
    name: do-worker
    provider: digitalocean
    count: 2
    roles:
      - worker
    size: s-2vcpu-4gb
    image: ubuntu-22-04-x64
    region: nyc3
    zones: []
    labels:
      role: worker
      provider: digitalocean
    taints: []
    userData: ""

  # Linode Masters (2 masters)
  linode-masters:
    name: linode-master
    provider: linode
    count: 2
    roles:
      - controlplane
      - etcd
    size: g6-standard-4
    image: linode/ubuntu22.04
    region: us-east
    zones: []
    labels:
      role: master
      provider: linode
    taints: []
    userData: ""

  # Linode Workers (1 worker)
  linode-workers:
    name: linode-worker
    provider: linode
    count: 1
    roles:
      - worker
    size: g6-standard-2
    image: linode/ubuntu22.04
    region: us-east
    zones: []
    labels:
      role: worker
      provider: linode
    taints: []
    userData: ""

kubernetes:
  version: v1.28.7
  networkPlugin: canal
  podCidr: 10.42.0.0/16
  serviceCidr: 10.43.0.0/16
  clusterDns: 10.43.0.10
  clusterDomain: cluster.local
  auditLog: true
  encryptSecrets: true
  monitoring: true
  addons:
    - name: metallb
      enabled: true
      version: v0.13.7
      namespace: metallb-system
      repository: https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml

storage:
  defaultClass: local-path
  classes:
    - name: local-path
      provisioner: rancher.io/local-path
      reclaimPolicy: Delete
      volumeBindingMode: WaitForFirstConsumer
      parameters:
        path: /opt/local-path-provisioner

monitoring:
  enabled: true
  prometheus:
    enabled: true
    retention: 30d
    storageSize: 50Gi
  grafana:
    enabled: true
    adminPassword: ${GRAFANA_ADMIN_PASSWORD}
  alertManager:
    enabled: true
    replicas: 1

